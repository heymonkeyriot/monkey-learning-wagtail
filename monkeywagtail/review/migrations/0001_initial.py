# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-06-26 18:55
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields
import wagtail.wagtailimages.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('artist', '0001_initial'),
        ('wagtailcore', '0028_merge'),
        ('album', '0002_auto_20160626_1955'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewAlbumRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewArtistRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(verbose_name='Post date')),
                ('rating', models.IntegerField(help_text='Your rating needs to be between 0 - 5', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Album rating')),
                ('introduction', models.TextField(blank=True, help_text='Text to show at the review page')),
                ('listing_introduction', models.CharField(blank=True, help_text="Text shown on review, and other, listing pages, if empty will show 'Introduction' field content", max_length=250)),
                ('body', wagtail.wagtailcore.fields.StreamField((('paragraph', wagtail.wagtailcore.blocks.RichTextBlock(icon='pilcrow', template='blocks/paragraph.html')), ('h1', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='fa-header', template='blocks/h1.html')), ('h2', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='fa-header', template='blocks/h2.html')), ('h3', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='fa-header', template='blocks/h3.html')), ('h4', wagtail.wagtailcore.blocks.CharBlock(classname='title', icon='fa-header', template='blocks/h4.html')), ('image', wagtail.wagtailcore.blocks.StructBlock((('image', wagtail.wagtailimages.blocks.ImageChooserBlock()), ('caption', wagtail.wagtailcore.blocks.CharBlock(blank=True, required=False)), ('style', wagtail.wagtailcore.blocks.ChoiceBlock(choices=[('', 'Select an image size'), ('full', 'Full-width'), ('half', 'Half-width')], required=False))), icon='image', template='blocks/image.html')), ('blockquote', wagtail.wagtailcore.blocks.StructBlock((('text', wagtail.wagtailcore.blocks.TextBlock()), ('attribute_name', wagtail.wagtailcore.blocks.CharBlock(blank=True, label='e.g. Guy Picciotto', required=False)), ('attribute_group', wagtail.wagtailcore.blocks.CharBlock(blank=True, label='e.g. Fugazi', required=False))), icon='openquote', template='blocks/blockquote.html'))), blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='reviewartistrelationship',
            name='ArtistRelationship',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_artist_relationship', to='review.ReviewPage'),
        ),
        migrations.AddField(
            model_name='reviewartistrelationship',
            name='artist_name',
            field=models.ForeignKey(help_text='The artist who made the album being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='artist.Artist'),
        ),
        migrations.AddField(
            model_name='reviewalbumrelationship',
            name='AlbumRelationship',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_album_relationship', to='review.ReviewPage'),
        ),
        migrations.AddField(
            model_name='reviewalbumrelationship',
            name='album_name',
            field=models.ForeignKey(help_text='The album being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='album.Album'),
        ),
    ]
