# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-02-02 20:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0029_unicode_slugfield_dj19'),
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('artist', '0012_auto_20170127_1644'),
        ('album', '0015_auto_20161023_1700'),
    ]

    operations = [
        migrations.CreateModel(
            name='TourAlbumRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('albums', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_tour_relationship', to='album.Album')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TourArtistRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('artists', models.ForeignKey(help_text='The artist(s) who made this album', on_delete=django.db.models.deletion.CASCADE, related_name='artist_tour_relationship', to='artist.Artist')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TourDates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('venue', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TourIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('listing_introduction', models.TextField(blank=True, help_text='Text to describe this section. Will appear on other pages that reference this feature section')),
                ('introduction', models.TextField(blank=True, help_text='Text to describe this section. Will appear on the page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TourPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('tour_listing_introduction', models.TextField(blank=True, max_length=254, verbose_name='A listing introduction for the tour')),
                ('tour_description', wagtail.wagtailcore.fields.RichTextField(verbose_name='A description for the tour')),
                ('image', models.ForeignKey(blank=True, help_text='Album cover image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='tourdates',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tourdates', to='tours.TourPage'),
        ),
        migrations.AddField(
            model_name='tourartistrelationship',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tour_artist_relationship', to='tours.TourPage'),
        ),
        migrations.AddField(
            model_name='touralbumrelationship',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tour_album_relationship', to='tours.TourPage'),
        ),
    ]
